#!/bin/bash
#
# Copyright (c) 2006-2009, Greg M. Kurtzer, Arthur A. Stevens and
# Infiscale, Inc. All rights reserved
#
# Gentoo compatible Perceus init script

### BEGIN INIT INFO
# Provides:             provisiond
# Required-Start:       $network $local_fs $remote_fs
# Required-Stop:
# Default-Start:        3 4 5
# Default-Stop:         0 1 6
# Short-Description:    Perceus cluster management client daemon
### END INIT INFO

prefix=@prefix@
exec_prefix=@exec_prefix@
localstatedir=@localstatedir@
sbindir=@sbindir@
sysconfdir=@sysconfdir@
libexecdir=@libexecdir@

# source Perceus config if it exists
if [ -f "/etc/sysconfig/provisiond" ]; then
   . /etc/sysconfig/provisiond
fi

if [ -z "$MASTERIP" ]; then
   MASTERIP=`sed -e '/masterip=/!d;s/.*masterip=\([^ ]\+\).*/\1/' /proc/cmdline`
fi
if [ -z "$MASTERIP" ]; then
   MASTERIP=localhost
fi

if [ -z "$NODEID" ]; then
   NODEID=""
   # Uncomment NODEID to force a particular nodeID and maybe spoof a device (use
   # this if you know what your doing!)
   #NODEID="nodeid=`ethinfo -aq eth0`"
fi

EXITVAL=0

start() {
   local RETVAL=0
   if [ -x "$sbindir/provisiond" ]; then
      echo "Starting the Perceus client daemon (provisiond)."
      /sbin/start-stop-daemon --start --exec $sbindir/provisiond -i 300 ${MASTERIP} ready $NODEID
      if [ $? -ne "0" ]; then
         RETVAL=1
      fi
   fi
   echo
   return $RETVAL
}

stop() {
   local RETVAL=0
   if [ "x\$MASTERIP" != "x" ]; then
      echo "Stopping the Perceus client daemon (provisiond):"
      /sbin/start-stop-daemon --stop provisiond
      if [ $? -ne "0" ]; then
         RETVAL=1
      fi
      # Tell the head node our best guess of what we're about to do
      if test "$runlevel" = "0"; then
         state="halt"
      elif test "$runlevel" = "1"; then
         state="single-user"
      elif test "$runlevel" = "6"; then
         state="reboot"
      else
         state="unmonitored"
      fi
      $sbindir/provisiond ${MASTERIP} $state $NODEID
   fi
   return $RETVAL
}

case "$1" in
  start)
   start
   EXITVAL=$?
   ;;
  stop)
   stop
   EXITVAL=$?
   ;;
  restart)
   stop
   start
   EXITVAL=$?
   ;;
  *)
   echo $"Usage: $0 {start|stop|restart}"
   exit 1
esac

exit $EXITVAL
